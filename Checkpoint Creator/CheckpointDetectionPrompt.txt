# üß† Revenue Assurance AI Prompt Template

## üë§ Scenario
You are an expert **Revenue Assurance Engineer** working for a company that specializes in **automated revenue leakage detection and protection**. Your job is to analyze customer purchased product data and identify potential **leakage scenarios** as many as possible based on domain knowledge and business logic.

---

## üì¶ Sample Dataset

```csv
"HP_ACCT","SKU","PARTNO","DEAL_NAME","PRODUCT_NAME","BRMPACKAGEID","STATUS","QUANTITY","PURCHASE_START_DATE","PURCHASE_END_DATE","CYCLE_START_DATE","CYCLE_END_DATE","CREATED_DATE","MRC_PARTNER_PRICE","MRC_EU_PRICE","ONETIME_PARTNER_PRICE","ONETIME_EU_PRICE"
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::200219:MRC:Service_Line:2","9731466398-6080682",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:50,14.8,19.99,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:Reg_Fee:1","9731466398-6080682",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:50,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:Reg_Fee2:1","9731466398-6080682",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:50,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:Reg_Fee3:1","9731466398-6080682",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:50,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:LINE_TAX:0","9731466398-6080682",3,1,30-DEC-2021 08:00:00,16-JUN-2024 07:00:00,06-JAN-2022 08:00:00,16-JUN-2024 07:00:00,30-DEC-2021 12:14:50,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:LINE_TAX:1","9731466398-6080682",3,1,30-DEC-2021 08:00:00,16-JUN-2024 07:00:00,06-JAN-2022 08:00:00,16-JUN-2024 07:00:00,30-DEC-2021 12:14:50,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::200219:MRC:Service_Line:2","9731466398-6080683",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:51,14.8,19.99,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:Reg_Fee:1","9731466398-6080683",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:51,0,0,0,0
"1691808","VUSR000009","UN161R","1:::200219:ACCT:2:Service_Line","1:::151016:MRC:Reg_Fee2:1","9731466398-6080683",1,1,30-DEC-2021 08:00:00,01-JAN-1970 00:00:00,06-JAN-2022 08:00:00,01-JAN-1970 00:00:00,30-DEC-2021 12:14:51,0,0,0,0
````

---

## üßæ Data Dictionary

```csv
COLUMN_NAME,COLUMN_DESCRIPTION
HP_ACCT,Unique account identifier in all systems
SKU,"Unique identifier for a license between HP and BRM. In BRM it is a deal and is composed of multiple products for MRC, Regulatory Fees, Usage etc"
PARTNO,"Unique identifer associated to a SKU, maybe used by provisioning"
DEAL_NAME,BRM deal name
PRODUCT_NAME,BRM product name (the main product for service MRC)
BRMPACKAGEID,Unique ID for a purchase between HP and BRM
STATUS,"BRM status, Active, Inactive, Cancelled"
QUANTITY,"Quantity, should be 1 for 4.0"
PURCHASE_START_DATE,Purchase start date
PURCHASE_END_DATE,Purchase end date
CYCLE_START_DATE,Cycle start date
CYCLE_END_DATE,Cycle end date
CREATED_DATE,Purchased date
MRC_EU_PRICE,Monthly Recurring End user price
MRC_PARTNER_PRICE,Monthly Recurring Partner price
ONETIME_EU_PRICE,Onetime End user price
ONETIME_PARTNER_PRICE,Onetime Partner price
````
---

## üìú Business Rules

1. MRC_PARTNER_PRICE is the price sold to a retailer and MRC_EU_PRICE is the price sold by retailer to a end user.
2. customers who have purchased "Service_Line" as in PRODUCT_NAME column should be billed for equal quantities of Reg_Fee,Reg_Fee2,Reg_Fee3 fees from start day of the Service_Line till Service_Line is terminated. BRMPACKAGEID is the unique identifier to map the correct pairs of Service_Line,Reg_Fee,Reg_Fee2 &Reg_Fee3.
3. customers who have purchased "Service_Line" as in PRODUCT_NAME column should be billed for LINE_TAX fees from start day of the Service_Line till Service_Line is terminated in the ratio of 10:1. That is for every 10 active Service_Line there should be 1 LINE_TAX.
4. Negative monthly recurring charges are not allowed.

---

## üì£ Instructions for AI

You must:

* Analyze the dataset and rules above
* Identify revenue leakage scenarios as many as possible
* For each, output:

  * Use case name
  * Description
  * Root cause
  * Affected records
  * Detection logic (SQL or Python pseudocode)
  * Significance score (1‚Äì10)
  * Suggested control or fix

---

## ‚úçÔ∏è Output Template (Editable by You)

```yaml
use_case:
  name: "<Title of Leakage Use Case>"
  description: "<Short explanation of what is leaking and why>"
  affected_records: "<Summary of which rows or accounts are impacted>"
  reason_for_leakage: "<Root cause or missed validation>"
  detection_logic_sql: |
    SELECT account_id
    FROM usage_data
    WHERE <condition>
  significance_score: 8
  recommendation: "<Control to prevent future leakage>"
```

---

## ‚úÖ Your Notes / Additional Inputs

<!-- Add anything you want me to consider or assume (e.g., customer-specific logic, volume, SLAs, etc.) -->

```

---

When you're done editing, just paste the filled-in markdown or send me a link/file. I‚Äôll help you turn it into a full AI-ready input or review/refine it as needed.
```
